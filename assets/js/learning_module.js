// ==============================================
// CodeLingua - MÃ³dulo DidÃ¡ctico (Lin & Codder)
// Autor: Arlevy Sabogal
// ==============================================

window.CodeLingua = window.CodeLingua || {};

(function() {
  const learningModule = {
    mentor: null,
    currentStep: 0,
    steps: [],

    // Inicializa segÃºn la unidad
    init() {
      const unit = document.body.dataset.unit;

      if (unit.includes("eng")) {
        this.mentor = "Lin";
        this.steps = [
          {
            mentor: "Lin",
            text: "Â¡Hola! Soy Lin ðŸŽ©ðŸ‡¬ðŸ‡§. Hoy aprenderÃ¡s vocabulario tÃ©cnico esencial en inglÃ©s."
          },
          {
            mentor: "Lin",
            text: "Recuerda: una <em>variable</em> en inglÃ©s es algo que puede cambiar, como 'variable' en espaÃ±ol. ðŸ”¤"
          },
          {
            mentor: "Lin",
            text: "Vamos a practicar traduciendo y comprendiendo palabras comunes del entorno tecnolÃ³gico. ðŸ’»"
          }
        ];
      } else if (unit.includes("prog")) {
        this.mentor = "Codder";
        this.steps = [
          {
            mentor: "Codder",
            text: "Â¡Hola! Soy Codder ðŸ§¢ðŸ’». Te enseÃ±arÃ© los fundamentos de la programaciÃ³n paso a paso."
          },
          {
            mentor: "Codder",
            text: "Primero entenderemos quÃ© es una <em>variable</em>: piensa en una caja donde guardas datos. ðŸ“¦"
          },
          {
            mentor: "Codder",
            text: "Luego exploraremos cÃ³mo usar condiciones, bucles y lÃ³gica bÃ¡sica en los programas. ðŸ§ "
          }
        ];
      }

      this.renderStep();
    },

    // Muestra el paso actual
    renderStep() {
      const dialogueContainer = document.getElementById("mentor-dialogue");
      if (!dialogueContainer) return;

      const step = this.steps[this.currentStep];
      if (!step) {
        this.finishIntro();
        return;
      }

      const bubble = document.createElement("div");
      bubble.className = "mentor-bubble";
      bubble.innerHTML = `<strong>${step.mentor}:</strong> ${step.text}`;
      dialogueContainer.appendChild(bubble);

      // Efecto visual de narraciÃ³n
      if (window.CodeLingua.speak) {
        window.CodeLingua.speak(`${step.mentor} dice: ${step.text.replace(/<[^>]+>/g, '')}`);
      }

      // Avanza al siguiente paso despuÃ©s de 4 segundos
      setTimeout(() => {
        this.currentStep++;
        this.renderStep();
      }, 4000);
    },

    // Cierra la introducciÃ³n y da paso a las preguntas
    finishIntro() {
      const dialogueContainer = document.getElementById("mentor-dialogue");
      const bubble = document.createElement("div");
      bubble.className = "mentor-bubble";
      bubble.innerHTML = `<strong>${this.mentor}:</strong> Â¡Excelente! Ahora pongamos en prÃ¡ctica lo aprendido. ðŸš€`;
      dialogueContainer.appendChild(bubble);

      if (window.CodeLingua.speak) {
        window.CodeLingua.speak("Excelente, ahora pongamos en prÃ¡ctica lo aprendido.");
      }

      setTimeout(() => {
        const introSection = document.querySelector(".intro-section");
        if (introSection) introSection.scrollIntoView({ behavior: "smooth" });
      }, 2500);
    }
  };

  window.CodeLingua.learningModule = learningModule;

  // InicializaciÃ³n automÃ¡tica cuando la pÃ¡gina carga
  document.addEventListener("DOMContentLoaded", () => learningModule.init());
})();
